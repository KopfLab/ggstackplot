[{"path":[]},{"path":"https://ggstackplot.kopflab.org/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://ggstackplot.kopflab.org/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://ggstackplot.kopflab.org/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://ggstackplot.kopflab.org/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://ggstackplot.kopflab.org/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement codeofconduct@rstudio.com. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://ggstackplot.kopflab.org/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://ggstackplot.kopflab.org/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://ggstackplot.kopflab.org/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://ggstackplot.kopflab.org/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://ggstackplot.kopflab.org/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://ggstackplot.kopflab.org/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.1, available https://www.contributor-covenant.org/version/2/1/code_of_conduct.html. Community Impact Guidelines inspired [Mozilla’s code conduct enforcement ladder][https://github.com/mozilla/inclusion]. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"https://ggstackplot.kopflab.org/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to ggstackplot","title":"Contributing to ggstackplot","text":"outlines propose change ggstackplot. detailed info contributing , tidyverse packages, please see development contributing guide.","code":""},{"path":"https://ggstackplot.kopflab.org/CONTRIBUTING.html","id":"fixing-typos","dir":"","previous_headings":"","what":"Fixing typos","title":"Contributing to ggstackplot","text":"can fix typos, spelling mistakes, grammatical errors documentation directly using GitHub web interface, long changes made source file. generally means ’ll need edit roxygen2 comments .R, .Rd file. can find .R file generates .Rd reading comment first line.","code":""},{"path":"https://ggstackplot.kopflab.org/CONTRIBUTING.html","id":"bigger-changes","dir":"","previous_headings":"","what":"Bigger changes","title":"Contributing to ggstackplot","text":"want make bigger change, ’s good idea first file issue make sure someone team agrees ’s needed. ’ve found bug, please file issue illustrates bug minimal reprex (also help write unit test, needed).","code":""},{"path":"https://ggstackplot.kopflab.org/CONTRIBUTING.html","id":"pull-request-process","dir":"","previous_headings":"Bigger changes","what":"Pull request process","title":"Contributing to ggstackplot","text":"Fork package clone onto computer. haven’t done , recommend using usethis::create_from_github(\"KopfLab/ggstackplot\", fork = TRUE). Install development dependencies devtools::install_dev_deps(), make sure package passes R CMD check running devtools::check(). R CMD check doesn’t pass cleanly, ’s good idea ask help continuing. Create Git branch pull request (PR). recommend using usethis::pr_init(\"brief-description--change\"). Make changes, commit git, create PR running usethis::pr_push(), following prompts browser. title PR briefly describe change. body PR contain Fixes #issue-number. user-facing changes, add bullet top NEWS.md (.e. just first header). Follow style described https://style.tidyverse.org/news.html.","code":""},{"path":"https://ggstackplot.kopflab.org/CONTRIBUTING.html","id":"code-style","dir":"","previous_headings":"Bigger changes","what":"Code style","title":"Contributing to ggstackplot","text":"New code follow tidyverse style guide. can use styler package apply styles, please don’t restyle code nothing PR. use roxygen2, Markdown syntax, documentation. use testthat unit tests. Contributions test cases included easier accept.","code":""},{"path":"https://ggstackplot.kopflab.org/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contributing to ggstackplot","text":"Please note ggstackplot project released Contributor Code Conduct. contributing project agree abide terms.","code":""},{"path":"https://ggstackplot.kopflab.org/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 ggstackplot authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://ggstackplot.kopflab.org/SUPPORT.html","id":null,"dir":"","previous_headings":"","what":"Getting help with ggstackplot","title":"Getting help with ggstackplot","text":"Thanks using ggstackplot! filing issue, places explore pieces put together make process smooth possible.","code":""},{"path":"https://ggstackplot.kopflab.org/SUPPORT.html","id":"make-a-reprex","dir":"","previous_headings":"","what":"Make a reprex","title":"Getting help with ggstackplot","text":"Start making minimal reproducible example using reprex package. haven’t heard used reprex , ’re treat! Seriously, reprex make R-question-asking endeavors easier (pretty insane ROI five ten minutes ’ll take learn ’s ). additional reprex pointers, check Get help! section tidyverse site.","code":""},{"path":"https://ggstackplot.kopflab.org/SUPPORT.html","id":"where-to-report-a-bug","dir":"","previous_headings":"","what":"Where to report a bug","title":"Getting help with ggstackplot","text":"Armed reprex, file issue GitHub. However, opening new issue, sure search issues pull requests make sure bug hasn’t reported /already fixed development version. default, search pre-populated :issue :open. can edit qualifiers (e.g. :pr, :closed) needed. example, ’d simply remove :open search issues repo, open closed.","code":""},{"path":"https://ggstackplot.kopflab.org/SUPPORT.html","id":"what-happens-next","dir":"","previous_headings":"","what":"What happens next?","title":"Getting help with ggstackplot","text":"Development packages tends bursty, shouldn’t worry don’t get immediate response. Typically don’t look repo sufficient quantity issues accumulates, ’s burst intense activity focus efforts. makes development efficient avoids expensive context switching problems, cost taking longer get back . process makes good reprex particularly important might multiple months initial report start working . can’t reproduce bug, can’t fix !","code":""},{"path":[]},{"path":[]},{"path":"https://ggstackplot.kopflab.org/articles/ggstackplot.html","id":"vertical-stack","dir":"Articles","previous_headings":"Main Arguments > x and y arguments","what":"Vertical stack","title":"ggstackplot","text":"Select variables make stack. selection order translates order plots stacked. valid tidyselect selection /renaming supported.","code":"# select any number of variables to make the stack mtcars |>    ggstackplot(     x = mpg, y = c(wt, qsec, drat)   ) # the selection order translates into stack order mtcars |>    ggstackplot(     x = mpg, y = c(drat, wt, qsec)   ) # use any valid tidyselect selection syntax mtcars |>    ggstackplot(     x = mpg, y = c(4, \"carb\", starts_with(\"d\"))   ) # use any valid tidyselect renaming syntax to rename stack panels mtcars |>    ggstackplot(     x = c(`mpg [units]` = mpg),      y = c(`weight [tons]` = wt, `speed` = qsec, drat)   )"},{"path":"https://ggstackplot.kopflab.org/articles/ggstackplot.html","id":"horizontal-stack","dir":"Articles","previous_headings":"Main Arguments > x and y arguments","what":"Horizontal stack","title":"ggstackplot","text":"Select multiple x variables stack:","code":"# all examples shown in this document work the same way for a horizontal # stack, simply switch out the x and y assignments mtcars |>    ggstackplot(     y = mpg, x = c(wt, qsec, drat)   )"},{"path":"https://ggstackplot.kopflab.org/articles/ggstackplot.html","id":"palette-argument","dir":"Articles","previous_headings":"Main Arguments","what":"palette argument","title":"ggstackplot","text":"Set individual plot colors providing RColorBrewer palette. Color definition applies color fill aesthetics well actual axis colors.","code":"# use the Set1 RColorBrewer palette mtcars |>    ggstackplot(     x = mpg, y = c(wt, qsec),     palette = \"Set1\"   ) # likewise for the horizontal stack version mtcars |>    ggstackplot(     y = mpg, x = c(wt, qsec),     palette = \"Set1\"   )"},{"path":"https://ggstackplot.kopflab.org/articles/ggstackplot.html","id":"color-argument","dir":"Articles","previous_headings":"Main Arguments","what":"color argument","title":"ggstackplot","text":"Alternatively, set colors manually supplying character vector colors:","code":"# select any specific colors for each plot mtcars |>    ggstackplot(     x = mpg, y = c(wt, qsec),     color = c(\"#E41A1C\", \"#377EB8\")   )"},{"path":"https://ggstackplot.kopflab.org/articles/ggstackplot.html","id":"remove_na-argument","dir":"Articles","previous_headings":"Main Arguments","what":"remove_na argument","title":"ggstackplot","text":"removes NA values lines interrupted. remove_na set FALSE, breaks lines may appear due NA values.","code":"library(dplyr)  # default (NAs are removed so lines are not interrupted) mtcars |>    add_row(mpg = 22, wt = 5, qsec = NA) |>   ggstackplot(     x = mpg, y = c(wt, qsec),     color = c(\"#E41A1C\", \"#377EB8\")   ) # explicit `remove_na` = FALSE mtcars |>    add_row(mpg = 22, wt = 5, qsec = NA) |>   ggstackplot(     x = mpg, y = c(wt, qsec),     color = c(\"#E41A1C\", \"#377EB8\"),     remove_na = FALSE   )"},{"path":"https://ggstackplot.kopflab.org/articles/ggstackplot.html","id":"both_axes-argument","dir":"Articles","previous_headings":"Main Arguments","what":"both_axes argument","title":"ggstackplot","text":"both_axes = TRUE , stacked variable axes duplicated sides stacked plot.","code":"# Vertical stackplot mtcars |>    ggstackplot(     x = mpg, y = c(wt, qsec),     color = c(\"#E41A1C\", \"#377EB8\"),     both_axes = TRUE   ) # Horizontal stackplot mtcars |>    ggstackplot(     y = mpg, x = c(wt, qsec),     color = c(\"#E41A1C\", \"#377EB8\"),     both_axes = TRUE   )"},{"path":"https://ggstackplot.kopflab.org/articles/ggstackplot.html","id":"alternate_axes-argument","dir":"Articles","previous_headings":"Main Arguments","what":"alternate_axes argument","title":"ggstackplot","text":"alternate_axes = FALSE , axes multiple variables kept side facets. default behavior alternates axes left/right top/bottom.","code":"# axes do not alternate: mtcars |>    ggstackplot(     x = mpg, y = c(wt, qsec),     color = c(\"#E41A1C\", \"#377EB8\"),     alternate_axes = FALSE   ) # Horizontal version mtcars |>    ggstackplot(     y = mpg, x = c(wt, qsec),     color = c(\"#E41A1C\", \"#377EB8\"),     alternate_axes = FALSE   )"},{"path":"https://ggstackplot.kopflab.org/articles/ggstackplot.html","id":"switch_axes-argument","dir":"Articles","previous_headings":"Main Arguments","what":"switch_axes argument","title":"ggstackplot","text":"Determines whether switch stacked axes. switching means vertical stacks plot bottom y-axis always left side; horizontal stacks plot left x-axis top. Setting switch_axes = TRUE}, leads opposite. alternate_axes = TRUE essentially switches order axes alternate (e.g., right/left/right vs. left/right/left). Note both_axes = TRUE, neither switch_axes alternate_axes parameter effect.","code":"# stacked axis starts on the right mtcars |>    ggstackplot(     x = mpg, y = c(wt, qsec),     color = c(\"#E41A1C\", \"#377EB8\"),     switch_axes = TRUE   ) # or for the horizontal version, stacked axis # starts on the bottom mtcars |>    ggstackplot(     y = mpg, x = c(wt, qsec),     color = c(\"#E41A1C\", \"#377EB8\"),     switch_axes = TRUE   ) # and in combination with alternate_axes = FALSE # all axes on the right mtcars |>    ggstackplot(     x = mpg, y = c(wt, qsec),     color = c(\"#E41A1C\", \"#377EB8\"),     alternate_axes = FALSE,     switch_axes = TRUE   ) # or all axes on the top mtcars |>    ggstackplot(     y = mpg, x = c(wt, qsec),     color = c(\"#E41A1C\", \"#377EB8\"),     alternate_axes = FALSE,     switch_axes = TRUE   )"},{"path":"https://ggstackplot.kopflab.org/articles/ggstackplot.html","id":"overlap-argument","dir":"Articles","previous_headings":"Main Arguments","what":"overlap argument","title":"ggstackplot","text":"Overlap determines grid overlap multiple stacked plots. 1 corresponds fully overlapping (similar ggplot sec_axis enabled) 0 overlap .","code":"# define any overlap between 0 and 1 mtcars |>    ggstackplot(     x = mpg, y = c(qsec, drat),     color = c(\"#E41A1C\", \"#377EB8\"),     overlap = 0.3   ) # full overlap mtcars |>    ggstackplot(     x = mpg, y = c(qsec, drat),     color = c(\"#E41A1C\", \"#377EB8\"),     overlap = 1   )"},{"path":"https://ggstackplot.kopflab.org/articles/ggstackplot.html","id":"different-overlaps","dir":"Articles","previous_headings":"Main Arguments > overlap argument","what":"Different overlaps","title":"ggstackplot","text":"Multiple overlap arguments can supplied numeric vector numbers 0 1, element vector corresponds overlap n n+1th overlap value. example, plot four stacked panels: qsec, drat, wt, hp, vector overlap = c(1, 0, 1) indicates first 2 elements (qsec drat) full overlap. drat wt overlap (0). wt hp full overlap.","code":"# different overlap between stack panels mtcars |>    ggstackplot(     x = mpg,      y = c(qsec, drat, wt, hp),     color = c(\"#E41A1C\", \"#377EB8\", \"#4DAF4A\", \"#984EA3\"),     overlap = c(1, 0, 1)   ) # and the horizontal version mtcars |>    ggstackplot(     y = mpg,      x = c(qsec, drat, wt, hp),     color = c(\"#E41A1C\", \"#377EB8\", \"#4DAF4A\", \"#984EA3\"),     overlap = c(1, 0, 1)   )"},{"path":"https://ggstackplot.kopflab.org/articles/ggstackplot.html","id":"shared_axis_size-argument","dir":"Articles","previous_headings":"Main Arguments","what":"shared_axis_size argument","title":"ggstackplot","text":"size shared axis determines size shared axes relative grid size original ggplot. size shared axis often needs adjusted depending aspect ratio intended. defined fraction full panel, 0 1.","code":"mtcars |>    ggstackplot(     x = mpg, y = c(qsec, drat),     color = c(\"#E41A1C\", \"#377EB8\"),     overlap = 1,     # can be only 10% of a plot size as we're overlapping plots     shared_axis_size = 1   )"},{"path":"https://ggstackplot.kopflab.org/articles/ggstackplot.html","id":"simplify_shared_axis-argument","dir":"Articles","previous_headings":"Main Arguments","what":"simplify_shared_axis argument","title":"ggstackplot","text":"Sometimes ’s better just keep shared axis panel. produces something akin facet_wrap() cowplot::plot_grid().","code":"mtcars |>    ggstackplot(     x = mpg, y = c(qsec, drat),     color = c(\"#E41A1C\", \"#377EB8\"),     simplify_shared_axis = FALSE   ) # also goes well with changing `both_axes`, `switch_axes` and/or `alternate_axes` mtcars |>    ggstackplot(     x = mpg, y = c(qsec, drat),     color = c(\"#E41A1C\", \"#377EB8\"),     simplify_shared_axis = FALSE,     alternate_axes = FALSE   )"},{"path":"https://ggstackplot.kopflab.org/articles/ggstackplot.html","id":"the-template-argument","dir":"Articles","previous_headings":"","what":"The template argument","title":"ggstackplot","text":"important argument. defines ggplot use template plots stack. can actual plot (just data replaced) ggplot doesn’t data associated yet. possibilities pretty much endless. Just make sure always add theme_stacked_plot() base theme (can modify ). examples :","code":""},{"path":"https://ggstackplot.kopflab.org/articles/ggstackplot.html","id":"theme-modifications","dir":"Articles","previous_headings":"The template argument","what":"Theme modifications","title":"ggstackplot","text":"Add modification overlying theme see fit. , template allows user define ggplot() serve base, geom_line primary geom. , theme_stackplot() applied custom theme() options set.","code":"library(ggplot2)  # increase y axis text size mtcars |>   ggstackplot(     x = mpg, y = c(qsec, drat),     color = c(\"#E41A1C\", \"#377EB8\"),     template =        ggplot() +        geom_line() +       theme_stackplot() +       theme(         axis.title.y = element_text(size = 20),         axis.text.y = element_text(size = 16)       )   ) # increase the panel margins mtcars |>   ggstackplot(     x = mpg, y = c(qsec, drat),     color = c(\"#E41A1C\", \"#377EB8\"),     template =        ggplot() +        geom_line() +       theme_stackplot() +       theme(         # increase left margin to 20% and top/bottom margins to 10%         plot.margin = margin(l = 0.2, t = 0.1, b = 0.1, unit = \"npc\")       )   )"},{"path":"https://ggstackplot.kopflab.org/articles/ggstackplot.html","id":"grid-modifications","dir":"Articles","previous_headings":"The template argument","what":"Grid modifications","title":"ggstackplot","text":"Modifying panel.grid argument can create gridlines stacked variable axes shared axis. can get bit cluttered plot overlap = 1.  , can look reasonable overlap stacked plats, /lines made inconspicuous:","code":"mtcars |>   ggstackplot(     x = mpg, y = c(qsec, drat),     color = c(\"#E41A1C\", \"#377EB8\"),     overlap = 1,     template = ggplot() +       geom_line(data = function(df) filter(df, .yvar == \"qsec\")) +       geom_point(data = function(df) filter(df, .yvar == \"drat\")) +       theme_stackplot() +       theme(         panel.grid.major = element_line(           color = \"lightgray\",            linewidth = 0.8)       )   ) mtcars |>   ggstackplot(     x = mpg, y = c(qsec, drat),     color = c(\"#E41A1C\", \"#377EB8\"),     overlap = 0,     template = ggplot() +       geom_line(data = function(df) filter(df, .yvar == \"qsec\")) +       geom_point(data = function(df) filter(df, .yvar == \"drat\")) +       theme_stackplot() +       theme(         panel.grid.major = element_line(           color = \"lightgray\",            linetype = \"dotted\",            linewidth = 0.5)       )   )"},{"path":"https://ggstackplot.kopflab.org/articles/ggstackplot.html","id":"other-themes","dir":"Articles","previous_headings":"The template argument","what":"Other themes","title":"ggstackplot","text":"aren’t bound theme’s aesthetic choices :), can always add another theme theme modifications top theme_stackplot()! add classic theme_bw() get nice clean gridlines back, well panel border.","code":"mtcars |>   ggstackplot(     x = mpg, y = c(qsec, drat),     color = c(\"#E41A1C\", \"#377EB8\"),     overlap = 0,     template = ggplot() +       geom_line(data = function(df) filter(df, .yvar == \"qsec\")) +       geom_point(data = function(df) filter(df, .yvar == \"drat\")) +       theme_stackplot() +       theme_bw() # give us that good theme!   )"},{"path":"https://ggstackplot.kopflab.org/articles/ggstackplot.html","id":"custom-geom-data","dir":"Articles","previous_headings":"The template argument","what":"Custom geom data","title":"ggstackplot","text":"possible use different geoms different stacked panels. , use lines points. geoms defined template argument.","code":"# use different geoms for different panels # you can refer to y-stack panel variables with `.yvar` and x-stack panel variables with `.xvar` mtcars |>   ggstackplot(     x = mpg, y = c(qsec, drat),     color = c(\"#E41A1C\", \"#377EB8\"),     overlap = 1,     template = ggplot() +       geom_line(data = function(df) filter(df, .yvar == \"qsec\")) +       geom_point(data = function(df) filter(df, .yvar == \"drat\")) +       theme_stackplot()   )"},{"path":"https://ggstackplot.kopflab.org/articles/ggstackplot.html","id":"different-plot-elements","dir":"Articles","previous_headings":"The template argument","what":"Different plot elements","title":"ggstackplot","text":"One can also change geoms default theme. use geom_path() instead geom_line() horizontal stack. common use case geom_line() connects data points increasing x-axis always want (example oceanographic depth plots want connect data points increasing y-axis value).","code":"# horizontal stack with default (geom_line()) mtcars |>   ggstackplot(     y = mpg, x = c(qsec, drat),     color = c(\"#E41A1C\", \"#377EB8\"),     template =        ggplot() +        geom_point() +       geom_line() + # default in template       theme_stackplot()    ) # the following is the exact same data but using a # horizontal stack with \"depth-profile\" like geom_path() mtcars |>   # arrange data by the y-axis   arrange(mpg) |>   ggstackplot(     y = mpg, x = c(qsec, drat),     color = c(\"#E41A1C\", \"#377EB8\"),     template =        ggplot() +        geom_point() +       geom_path() + # plots data in order       theme_stackplot()    )"},{"path":"https://ggstackplot.kopflab.org/articles/ggstackplot.html","id":"additional-plot-elements","dir":"Articles","previous_headings":"The template argument","what":"Additional plot elements","title":"ggstackplot","text":"One can also add additional plot elements just normal ggplot. add vertical line shared across stacked plots:","code":"mtcars |>   ggstackplot(     x = mpg, y = c(qsec, drat),     color = c(\"#E41A1C\", \"#377EB8\"),     overlap = 0.2,      template =        ggplot() +        geom_vline(xintercept = 20, linewidth = 4, color = \"gray80\") +       geom_line() +       theme_stackplot()    )"},{"path":"https://ggstackplot.kopflab.org/articles/ggstackplot.html","id":"axis-modifications","dir":"Articles","previous_headings":"The template argument","what":"Axis modifications","title":"ggstackplot","text":"Sometimes secondary axes still desired, especially axis transformation existing one. example, , create square root mpg axis plotted mpg axis. can also defined template argument adding scale_x_continuous argument, just normal ggplot.  Similarly, transformation axes can introduced e.g. log axis.","code":"# add a secondary x axis mtcars |>   ggstackplot(     x = mpg, y = c(qsec, drat),     color = c(\"#E41A1C\", \"#377EB8\"),     both_axes = TRUE, overlap = 0.1,      template =        ggplot() +        geom_line() +       scale_x_continuous(         # change axis name         name = \"this is my mpg axis\",         # this can be the same with dup_axis() or as here have a transformed axis         sec.axis = sec_axis(           transform = sqrt,            name = expression(sqrt(mpg)),            breaks = scales::pretty_breaks(5)         )       ) +       theme_stackplot()    ) mtcars |>   ggstackplot(     x = mpg, y = c(qsec, drat),     color = c(\"#E41A1C\", \"#377EB8\"),     both_axes = TRUE, overlap = 0.1,     template =        ggplot() +        geom_line() +       scale_x_log10(\"this is my log10 mpg axis\") +       theme_stackplot()    )"},{"path":"https://ggstackplot.kopflab.org/articles/ggstackplot.html","id":"additional-aesthetics","dir":"Articles","previous_headings":"The template argument","what":"Additional aesthetics","title":"ggstackplot","text":"Aesthetics also defined template argument. Remember, parameters defined stackplot () shared axis (case, mpg ), (ii) axes stacked, case y = c(wt, qsec, drat), (iii) ggstackplot-specific arguments. ggplot arguments aesthetics assigned template argument.","code":"# add aesthetics to the plot mtcars |>   ggstackplot(     x = mpg,  y = c(wt, qsec, drat),     alternate_axes = FALSE,     template =        ggplot() +       aes(color = factor(cyl), linetype = factor(cyl), shape = factor(cyl)) +       geom_line() +       geom_point(size = 3) +       theme_stackplot()    )"},{"path":"https://ggstackplot.kopflab.org/articles/ggstackplot.html","id":"the-add-argument","dir":"Articles","previous_headings":"","what":"The add argument","title":"ggstackplot","text":"even specific plot refinements, add argument provides easy way add ggplot components specific panels stack plot. examples :","code":""},{"path":"https://ggstackplot.kopflab.org/articles/ggstackplot.html","id":"custom-geoms","dir":"Articles","previous_headings":"The add argument","what":"Custom geoms","title":"ggstackplot","text":"Similar example custom geom data add argument can also used add specific geoms specific panels. takes form list() item list form: panel_name = panel_addition panel_name panel-specific variable panel_addition item add (+) panel. add also allows user make additions index (e.g., first panel, second panel, third panel, etc.). , add geom_line qsec panel geom_rect rectangle drat panel defining panels list().","code":"mtcars |>   ggstackplot(     x = mpg, y = c(qsec, drat),     color = c(\"#E41A1C\", \"#377EB8\"),     template = ggplot() + theme_stackplot(),     # add:     add = list(       # panel by name       qsec = geom_line(),        drat = geom_rect(         xmin = 20, xmax = 25, ymin = 3.2, ymax = 4.2, fill = \"gray90\") +          geom_point()     )   )"},{"path":"https://ggstackplot.kopflab.org/articles/ggstackplot.html","id":"custom-themes","dir":"Articles","previous_headings":"The add argument","what":"Custom themes","title":"ggstackplot","text":"Similarly, custom theme options can added specific panels. , add panel index:","code":"mtcars |>   ggstackplot(     x = mpg, y = c(qsec, drat),     color = c(\"#E41A1C\", \"#377EB8\"),     # define ggplot template options     template =        ggplot() +        geom_line() +        theme_stackplot(),     # define panel-specific additions     add = list(       # panel by index       # first panel:       geom_point() + theme(         axis.title.y = element_text(size = 30)),       # second panel:       theme(         panel.grid.major.y = element_line(           color = \"lightgray\",            size = 0.2))     )   )"},{"path":"https://ggstackplot.kopflab.org/articles/ggstackplot.html","id":"custom-axes","dir":"Articles","previous_headings":"The add argument","what":"Custom axes","title":"ggstackplot","text":"add argument also allows definition custom axes. particularly useful applying functions scales package.","code":"# particularly useful is also the possibility to modify individual scales mtcars |>   ggstackplot(     x = mpg, y = c(qsec, drat),     color = c(\"#E41A1C\", \"#377EB8\"),     template = ggplot() + geom_line() + theme_stackplot(),     add = list(       # modify the axis for the second plot       drat =          scale_y_continuous(\"$$ drat\",  labels = scales::label_dollar()) +          expand_limits(y = 0) +         theme(axis.title.y = element_text(size = 30))     )   )"},{"path":"https://ggstackplot.kopflab.org/articles/ggstackplot.html","id":"legend-positioning","dir":"Articles","previous_headings":"The add argument","what":"Legend positioning","title":"ggstackplot","text":"Another example theme modification use `add` argument specify legend positioning.","code":"mtcars |>   ggstackplot(     x = mpg,  y = c(wt, qsec, drat),     color = c(\"#E41A1C\", \"#377EB8\", \"#4DAF4A\"),     template =        ggplot() + aes(linetype = factor(vs)) +       geom_line() + theme_stackplot(),     # switch legend position for middle plot     add = list(qsec = theme(legend.position = \"left\"))   ) mtcars |>   ggstackplot(     x = mpg,  y = c(wt, qsec, drat),     color = c(\"#E41A1C\", \"#377EB8\", \"#4DAF4A\"),     template =        ggplot() +        aes(linetype = factor(vs)) +       geom_line() +        theme_stackplot() +       # remove the legends, then...       theme(legend.position = \"none\"),      # ... re-include the middle panel legend on the plot     # with some additional styling     add = list(       qsec =          theme(           # define legend relative position in x,y:           legend.position = c(0.2, 0.9),            # other legend stylistic changes:           legend.title = element_text(size = 20),           legend.text = element_text(size = 16),           legend.background = element_rect(             color = \"black\", fill = \"gray90\", linewidth = 0.5),           legend.key = element_blank(),           legend.direction = \"horizontal\"         ) +         labs(linetype = \"VS\")     )   )"},{"path":"https://ggstackplot.kopflab.org/articles/ggstackplot.html","id":"putting-it-all-together","dir":"Articles","previous_headings":"","what":"Putting it all together","title":"ggstackplot","text":"","code":"# example from the README with economics data bundled with ggplot2 ggplot2::economics |>   ggstackplot(     # define shared x axis     x = date,      # define the stacked y axes     y = c(pce, pop, psavert, unemploy),     # pick the RColorBrewer Dark2 palette (good color contrast)     palette = \"Dark2\",     # overlay the pce & pop plots (1), then make a full break (0) to the once     # again overlaye psavert & unemploy plots (1)     overlap = c(1, 0, 1),     # switch axes so unemploy and psavert are on the side where they are      # highest, respectively - not doing this here by changing the order of y     # because we want pop and unemploy on the same side     switch_axes = TRUE,     # make shared axis space a bit smaller     shared_axis_size = 0.15,     # provide a base plot with shared graphics eelements among all plots     template =        # it's a ggplot       ggplot() +       # use a line plot for all       geom_line() +       # we want the default stackplot theme       theme_stackplot() +       # add custom theme modifications, such as text size       theme(text = element_text(size = 14)) +       # make the shared axis a date axis       scale_x_date(\"year\") +       # include y=0 for all plots to contextualize data better       expand_limits(y = 0),     # add plot specific elements     add =        list(         pce =            # show pce in trillions of dollars           scale_y_continuous(             \"personal consumption expenditures\",              # always keep the secondary axis duplicated so ggstackplot can             # manage axis placement for you             sec.axis = dup_axis(),             # labeling function for the dollar units             labels = function(x) sprintf(\"$%.1f T\", x/1000),           ),         pop =            # show population in millions           scale_y_continuous(             \"population\", sec.axis = dup_axis(),             labels = function(x) sprintf(\"%.0f M\", x/1000)           ),         psavert =            # savings is in %           scale_y_continuous(             \"personal savings rate\", sec.axis = dup_axis(),             labels = function(x) paste0(x, \"%\"),           ) +           # show data points in addition to line           geom_point(),         unemploy =            # unemploy in millions           scale_y_continuous(             \"unemployed persons\", sec.axis = dup_axis(),             labels = function(x) sprintf(\"%.0f M\", x/1000)           ) +           # show data points in addition to line           geom_point()       )   )"},{"path":"https://ggstackplot.kopflab.org/articles/ggstackplot.html","id":"advanced","dir":"Articles","previous_headings":"","what":"Advanced","title":"ggstackplot","text":"Instead calling ggstackplot() make plot, can also use prepare_stackplot() assemble_stackplot() separate two main steps making ggstackplot. prepare_stackplot() provides tibble plot components can modified directly tibble desired assembling plot assemble_stackplot(). Usuallyt necessary combination template add parameters ggstackplot() provides kind flexibility modifying plot elements plot tibble.","code":"# prep plot plot_prep <-    mtcars |>    prepare_stackplot(     x = mpg, y = c(wt, qsec),     palette = \"Set1\"   )  # show plot tibble plot_prep #> # A tibble: 2 × 6 #>   .var  config           data               plot   theme   add    #>   <chr> <list>           <list>             <list> <list>  <list> #> 1 wt    <tibble [1 × 9]> <tibble [32 × 11]> <gg>   <theme> <NULL> #> 2 qsec  <tibble [1 × 9]> <tibble [32 × 11]> <gg>   <theme> <NULL>  # modify plot tibble plot_prep$plot[[2]] <- ggplot(mtcars) + aes(mpg, drat) + geom_point() plot_prep$theme[[2]] <- theme_bw()  # assemble stackplot plot_prep |> assemble_stackplot()"},{"path":"https://ggstackplot.kopflab.org/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Sebastian Kopf. Author, maintainer, copyright holder. Tristan Caro. Author. Jamie McFarlin. Author. Jon Raberg. Author.","code":""},{"path":"https://ggstackplot.kopflab.org/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Kopf S, Caro T, McFarlin J, Raberg J (2025). ggstackplot: Create Overlapping Stacked Plots. R package version 0.4.1, https://github.com/kopflab/ggstackplot, https://ggstackplot.kopflab.org/.","code":"@Manual{,   title = {ggstackplot: Create Overlapping Stacked Plots},   author = {Sebastian Kopf and Tristan Caro and Jamie McFarlin and Jon Raberg},   year = {2025},   note = {R package version 0.4.1,     https://github.com/kopflab/ggstackplot},   url = {https://ggstackplot.kopflab.org/}, }"},{"path":[]},{"path":"https://ggstackplot.kopflab.org/index.html","id":"about","dir":"","previous_headings":"","what":"About","title":"Create Overlapping Stacked Plots","text":"ever wanted create (partly) overlapping line plots matched color-coding data axes? kinds plots common, example, climatology oceanography research easy way create ggplot facets. ggstackplot package builds ggplot2 provide straightforward approach building kinds plots retaining powerful grammar graphics functionality ggplots.","code":""},{"path":"https://ggstackplot.kopflab.org/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Create Overlapping Stacked Plots","text":"Install latest stable version ggstackplot GitHub (CRAN version may lag behind) :","code":"# install.packages(\"pak\") pak::pak(\"KopfLab/ggstackplot\")"},{"path":"https://ggstackplot.kopflab.org/index.html","id":"show-me-some-code","dir":"","previous_headings":"","what":"Show me some code","title":"Create Overlapping Stacked Plots","text":"","code":"library(ggstackplot)  # using R's built-in mtcars dataset mtcars |>    ggstackplot(     # define shared x axis     x = mpg,      # define multiple y axes     y = c(\"weight\" = wt, \"horsepower\" = hp),     # set colors     color = c(\"#E41A1C\", \"#377EB8\"),     # set to complete overlap     overlap = 1   )"},{"path":"https://ggstackplot.kopflab.org/index.html","id":"show-me-some-climate-data","dir":"","previous_headings":"","what":"Show me some climate data","title":"Create Overlapping Stacked Plots","text":"data kindly made available PANGEA Sigl et al. (2024). Full citation: Sigl, Michael; Gabriel, Imogen; Hutchison, William; Burke, Andrea (2024): Sulfate concentration sulfur isotope data Greenland TUNU2013 ice-core samples 740-765 CE [dataset]. PANGAEA, https://doi.org/10.1594/PANGAEA.967047 Vertical stack plot:","code":"# download a recent dataset from the public climate data repository PANGAEA dataset <- pangaear::pg_data(doi = \"10.1594/PANGAEA.967047\")[[1]]  # show what some of these data look like dataset$data[   c(\"Depth ice/snow [m] (Top Depth)\",      \"Age [ka BP]\",      \"[SO4]2- [ng/g] (Ion chromatography)\")] |>   head() |> knitr::kable() # visualize the data with ggstackplot dataset$data |>    ggstackplot(     x = \"Age [ka BP]\",     y = c(       # vertical stack of the measurements through time       \"sulfate [ng/g]\" = \"[SO4]2- [ng/g] (Ion chromatography)\",       \"δ34S [‰]\" = \"δ34S [SO4]2- [‰ CDT] (Multi-collector ICP-MS (MC-IC...)\",       \"Δ33S [‰]\" = \"Δ33S [SO4]2- [‰ CDT] (Multi-collector ICP-MS (MC-IC...)\"     ),     # color palette     palette = \"Dark2\",     # partial overlap of the panels     overlap = 0.4   )"},{"path":"https://ggstackplot.kopflab.org/index.html","id":"what-about-horizontal-stacks","dir":"","previous_headings":"","what":"What about horizontal stacks?","title":"Create Overlapping Stacked Plots","text":"Full citation: Boudinot, F Garrett; Kopf, Sebastian; Dildar, Nadia; Sepúlveda, Julio (2021): Compound-specific carbon isotope results SH#1 core analyzed processed University Colorado Boulder [dataset]. PANGAEA, https://doi.org/10.1594/PANGAEA.933277 Horizontal stack plot:","code":"# download some more data from PANGAEA dataset2 <- pangaear::pg_data(doi = \"10.1594/PANGAEA.933277\")[[1]]  # show what some of these data look like dataset2$data[   c(\"Depth sed [m]\", \"Comp\", \"δ13C [‰ PDB] (mean, vs. VPDB)\")] |>   head() |> knitr::kable() library(dplyr) library(ggplot2)  # use a custom template for this plot my_template <-   # it's a ggplot   ggplot() +   # use a path plot for all (to connect the data points by depth!)   geom_point() + geom_path() +   # we still want the default stackplot theme   theme_stackplot() +   # depth is commonly plotted in reverse   scale_y_reverse()  # now make the horizontal stack through depth for 2 of the variables dataset2$data |>    filter(Comp == \"C19\") |>   arrange(`Depth sed [m]`) |>   ggstackplot(     x = c(       \"δ13C carb [‰ PDB]\",       \"δ13C n-C19 [‰]\" = \"δ13C [‰ PDB] (mean, vs. VPDB)\"     ),     y = \"Depth sed [m]\",     palette = \"Dark2\",     overlap = 1,     template = my_template   ) # or show them side by side (note that this could also be achieved with ggplot # facets except for the fine-control and coloring of the different x-axes) dataset2$data |>    filter(Comp == \"C19\") |>   arrange(`Depth sed [m]`) |>   ggstackplot(     x = c(       \"δ13C carb [‰ PDB]\",       \"δ13C n-C19 [‰]\" = \"δ13C [‰ PDB] (mean, vs. VPDB)\"     ),     y = \"Depth sed [m]\",     palette = \"Dark2\",     # no more overlap     overlap = 0,      # fine-tune the axes to be on top and bottom     both_axes = TRUE,     template = my_template   )"},{"path":"https://ggstackplot.kopflab.org/index.html","id":"show-me-more","dir":"","previous_headings":"","what":"Show me more","title":"Create Overlapping Stacked Plots","text":"","code":"# using the built-in economics dataset in ggplot2 to create a vertical stacke of # double axis plots using many of the customization features available with  # ggstackplot and ggplot2 ggplot2::economics |>   ggstackplot(     # define shared x axis     x = date,      # define the stacked y axes     y = c(pce, pop, psavert, unemploy),     # pick the RColorBrewer Dark2 palette (good color contrast)     palette = \"Dark2\",     # overlay the pce & pop plots (1), then make a full break (0) to the once     # again overlaye psavert & unemploy plots (1)     overlap = c(1, 0, 1),     # switch axes so unemploy and psavert are on the side where they are      # highest, respectively - not doing this here by changing the order of y     # because we want pop and unemploy on the same side     switch_axes = TRUE,     # make shared axis space a bit smaller     shared_axis_size = 0.15,     # provide a base plot with shared graphics eelements among all plots     template =        # it's a ggplot       ggplot() +       # use a line plot for all       geom_line() +       # we want the default stackplot theme       theme_stackplot() +       # add custom theme modifications, such as text size       theme(text = element_text(size = 14)) +       # make the shared axis a date axis       scale_x_date(\"year\") +       # include y=0 for all plots to contextualize data better       expand_limits(y = 0),     # add plot specific elements     add =        list(         pce =            # show pce in trillions of dollars           scale_y_continuous(             \"personal consumption expenditures\",              # always keep the secondary axis duplicated so ggstackplot can             # manage axis placement for you             sec.axis = dup_axis(),             # labeling function for the dollar units             labels = function(x) sprintf(\"$%.1f T\", x/1000),           ),         pop =            # show population in millions           scale_y_continuous(             \"population\", sec.axis = dup_axis(),             labels = function(x) sprintf(\"%.0f M\", x/1000)           ),         psavert =            # savings is in %           scale_y_continuous(             \"personal savings rate\", sec.axis = dup_axis(),             labels = function(x) paste0(x, \"%\"),           ) +           # show data points in addition to line           geom_point(),         unemploy =            # unemploy in millions           scale_y_continuous(             \"unemployed persons\", sec.axis = dup_axis(),             labels = function(x) sprintf(\"%.0f M\", x/1000)           ) +           # show data points in addition to line           geom_point()       )   )"},{"path":"https://ggstackplot.kopflab.org/index.html","id":"what-else-can-i-do-with-ggstackplot","dir":"","previous_headings":"","what":"What else can I do with ggstackplot?","title":"Create Overlapping Stacked Plots","text":"check Vignette explore package detailed examples different features","code":""},{"path":"https://ggstackplot.kopflab.org/reference/ggstackplot-package.html","id":null,"dir":"Reference","previous_headings":"","what":"ggstackplot: Create Overlapping Stacked Plots — ggstackplot-package","title":"ggstackplot: Create Overlapping Stacked Plots — ggstackplot-package","text":"Easily create overlapping grammar graphics plots scientific data visualization. style plotting particularly common climatology oceanography research communities.","code":""},{"path":"https://ggstackplot.kopflab.org/reference/ggstackplot-package.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"ggstackplot: Create Overlapping Stacked Plots — ggstackplot-package","text":"ever wanted create (partly) overlapping line plots matched color-coding data axes? kinds plots common climatology oceanography research easy way create ggplot facets. ggstackplot package builds ggplot2 provide straightforward approach building kinds plots retaining powerful grammar graphics approach ggplots. Check functionality provided ggstackplots https://ggstackplot.kopflab.org","code":""},{"path":[]},{"path":"https://ggstackplot.kopflab.org/reference/ggstackplot-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"ggstackplot: Create Overlapping Stacked Plots — ggstackplot-package","text":"Maintainer: Sebastian Kopf sebastian.kopf@colorado.edu (ORCID) [copyright holder] Authors: Tristan Caro tristan.caro@colorado.edu (ORCID) Jamie McFarlin jamie.mcfarlin@uwyo.edu (ORCID) Jon Raberg Jonathan.Raberg@colorado.edu (ORCID)","code":""},{"path":"https://ggstackplot.kopflab.org/reference/ggstackplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Stack a ggplot — ggstackplot","title":"Stack a ggplot — ggstackplot","text":"Use ggstackplot() generate stackplot. need fine control, use prepare_stackplot() assemble_stackplot() individually. explore examples different features, check vignette(\"explore\", \"ggstackplot\") online documentation.","code":""},{"path":"https://ggstackplot.kopflab.org/reference/ggstackplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Stack a ggplot — ggstackplot","text":"","code":"ggstackplot(   data,   x,   y,   remove_na = TRUE,   color = NA,   palette = NA,   both_axes = FALSE,   alternate_axes = TRUE,   switch_axes = FALSE,   overlap = 0,   simplify_shared_axis = TRUE,   shared_axis_size = 0.2,   template = ggplot() + geom_line() + geom_point() + theme_stackplot(),   add = list(),   debug = FALSE )  prepare_stackplot(   data,   x,   y,   remove_na = TRUE,   color = NA,   palette = NA,   both_axes = FALSE,   alternate_axes = TRUE,   switch_axes = FALSE,   template = ggplot() + geom_line() + geom_point() + theme_stackplot(),   add = list(),   debug = FALSE )  assemble_stackplot(   prepared_stackplot,   overlap = 0,   simplify_shared_axis = TRUE,   shared_axis_size = 0.15,   debug = FALSE )"},{"path":"https://ggstackplot.kopflab.org/reference/ggstackplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Stack a ggplot — ggstackplot","text":"data data frame plot x x variable(s) plot, accepts dplyr::select() syntax. order variables plotted left right (multiple x). y y variable(s) plot, accepts dplyr::select() syntax. order variables plotted top bottom (multiple y). remove_na whether remove NA values x/y plot, setting FALSE can lead unintended side-effects interrupted lines check plot carefully change color color make plots (also sets plotwide color fill aesthetics, overwrite individual geoms template overwrite aesthetic), either one value one color per variable. Pick NA set colors (case want use aesthetics). palette color make plots defined RColorBrewer palette (RColorBrewer::display.brewer.()). can use color palette parameter, . both_axes whether stacked axes sides (overrides alternate_axes switch_axes) alternate_axes whether alternate sides stacked axes plotted switch_axes whether switch stacked axes. switching means vertical stacks plot bottom y-axis always left side; horizontal stacks plot left x-axis top. Setting switch_axes = TRUE, leads opposite. overlap fractional overlap adjacent plots. max 1 means plots perfectly overlaid. min 0 means overlap. providing multiple values, must 1 less number stacked plots (since describing overlap/gap adjacent plots). default overlap plots simplify_shared_axis whether simplify shared axis last plot (+ first plot duplicate secondary axis set) shared_axis_size simplify_shared_axes true, determines size shared axis relative size single plot template template plot (ggplot object) use stacked plots add list ggplot component calls add specific panel plots, either panel variable name (named list) index (unnamed list) debug debug flag print stackplot tibble gtable intermediates prepared_stackplot nested data frame, output prepare_stackplot()","code":""},{"path":"https://ggstackplot.kopflab.org/reference/ggstackplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Stack a ggplot — ggstackplot","text":"ggstackplot() returns ggplot overlayed plot layers prepare_stackplot() returns tibble plot components assemble_stackplot() returns ggplot overlayed plot layers","code":""},{"path":"https://ggstackplot.kopflab.org/reference/ggstackplot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Stack a ggplot — ggstackplot","text":"ggstackplot() stacks ggplot template provided data parameters. returns plot object generated cowplot::plot_grid()). prepare_stackplot() usually called directly can used assemble parts stackplot first look edit individually combining assemble_stackplot()]. Returns nested data frame stacked variables (.var), plot configuration, data, plot object, theme object. assemble_stackplot() usually called directly can used manually combine stackplot tibble (typically created prepare_stockplot()). Returns plot object generated cowplot::plot_grid()).","code":""},{"path":"https://ggstackplot.kopflab.org/reference/ggstackplot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Stack a ggplot — ggstackplot","text":"","code":"# 1 step stackplot (most common use) mtcars |>   ggstackplot(     x = mpg,     y = c(`weight [g]` = wt, qsec, drat, disp),     palette = \"Set1\",     overlap = c(1, 0, 0.3)   )   # 2 step stackplot mtcars |>   prepare_stackplot(     x = mpg,     y = c(`weight [g]` = wt, qsec, drat, disp),     palette = \"Set1\"   ) |>   assemble_stackplot(overlap = c(1, 0, 0.3))   if (FALSE) { # interactive() # many more examples available in the vignette vignette(\"ggstackplot\") }"},{"path":"https://ggstackplot.kopflab.org/reference/theme_stackplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Recommended base theme for stacked gg plots — theme_stackplot","title":"Recommended base theme for stacked gg plots — theme_stackplot","text":"Returns basic ggplot2 theme extends ggplot2::theme_bw() transparent plot background make sure overlapping plots cover .","code":""},{"path":"https://ggstackplot.kopflab.org/reference/theme_stackplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Recommended base theme for stacked gg plots — theme_stackplot","text":"","code":"theme_stackplot()"},{"path":"https://ggstackplot.kopflab.org/reference/theme_stackplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Recommended base theme for stacked gg plots — theme_stackplot","text":"ggplot2::theme() object","code":""},{"path":"https://ggstackplot.kopflab.org/reference/theme_stackplot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Recommended base theme for stacked gg plots — theme_stackplot","text":"","code":"library(ggplot2) template <- ggplot() + geom_line() + theme_stackplot()  ggstackplot(   data = mtcars,   x = mpg, y = c(wt, qsec, drat),   color = c(\"#E41A1C\", \"#377EB8\", \"#4DAF4A\"),   template = template )"},{"path":[]},{"path":"https://ggstackplot.kopflab.org/news/index.html","id":"ggstackplot-041","dir":"Changelog","previous_headings":"","what":"ggstackplot 0.4.1","title":"ggstackplot 0.4.1","text":"clarify behaviour switch_axes parameter horizontal stackplots fix issue #30 enable transformed shared axes rename features vignette standard package intro vignette (ggstackplot.Rmd) update vignette additional examples include example horizontal stackplot README","code":""},{"path":"https://ggstackplot.kopflab.org/news/index.html","id":"ggstackplot-040","dir":"Changelog","previous_headings":"","what":"ggstackplot 0.4.0","title":"ggstackplot 0.4.0","text":"first public release adding core ggstackplot functionality.","code":""},{"path":"https://ggstackplot.kopflab.org/news/index.html","id":"features-0-4-0","dir":"Changelog","previous_headings":"","what":"Features","title":"ggstackplot 0.4.0","text":"generate horizontally vertically stacked plots modify color, plot templates, individual plot elements","code":""}]
